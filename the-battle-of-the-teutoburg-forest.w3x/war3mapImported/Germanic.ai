function InitHero takes nothing returns nothing
    if (GetUnitCount(ARMINIUS) > 0) then
        set hero_id = ARMINIUS
        set skills1[ 1] = 'ANbr'
        set skills1[ 2] = 'A002'
        set skills1[ 3] = 'ANbr'
        set skills1[ 4] = 'A002'
        set skills1[ 5] = 'ANbr'
        set skills1[ 6] = AVATAR
        set skills1[ 7] = 'A002'
        set skills1[ 8] = WIND_WALK
        set skills1[ 9] = WIND_WALK
        set skills1[10] = WIND_WALK

        call BlzDisplayChatMessage(Player(GetAiPlayer()), 0, "I play Arminius.")
    elseif (GetUnitCount(CHIEFTAIN) > 0) then
        set hero_id = CHIEFTAIN
        set skills1[ 1] = THUNDER_BOLT
        set skills1[ 2] = BASH
        set skills1[ 3] = THUNDER_CLAP
        set skills1[ 4] = THUNDER_BOLT
        set skills1[ 5] = BASH
        set skills1[ 6] = BLADE_STORM
        set skills1[ 7] = BASH
        set skills1[ 8] = THUNDER_BOLT
        set skills1[ 9] = THUNDER_CLAP
        set skills1[10] = THUNDER_CLAP

        call BlzDisplayChatMessage(Player(GetAiPlayer()), 0, "I play a chieftain.")
    else
        set hero_id = DRUID
        set skills1[ 1] = HEALING_WAVE
        set skills1[ 2] = SCOUT
        set skills1[ 3] = HEX
        set skills1[ 4] = HEALING_WAVE
        set skills1[ 5] = SCOUT
        set skills1[ 6] = CHARM
        set skills1[ 7] = SCOUT
        set skills1[ 8] = HEALING_WAVE
        set skills1[ 9] = HEX
        set skills1[10] = HEX

        call BlzDisplayChatMessage(Player(GetAiPlayer()), 0, "I play a druid.")
    endif
endfunction

function main takes nothing returns nothing
    call InitHero()

    call CampaignAI(GERMANIC_HOUSE, function SkillArrays)
    call SetReplacements(9,9,9)
    call SetPeonsRepair(true)
    call SetSlowChopping(false)
    call SetWoodPeons(7)

    call SetBuildUnitEx( 1,1,1, GERMANIC_TIER_1    )
    call SetBuildUnitEx( 12,12,12, GERMAINC_WORKER         )
    call SetBuildUnitEx( 1,1,1, GERMANIC_ALTAR    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_WATCH_TOWER    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_STOCKPILE    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_SHOP    )
    call SetBuildUpgr(1, UPG_GERMANIC_MELEE)
    call SetBuildUpgr(1, UPG_GERMANIC_ARMOR)
    call SetBuildUpgr(1, UPG_GERMANIC_RANGED)


    call SetBuildUnitEx( 1,1,1, GERMANIC_TIER_2    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_SHRINE    )
    call SetBuildUpgr(2, UPG_GERMANIC_MELEE)
    call SetBuildUpgr(2, UPG_GERMANIC_ARMOR)
    call SetBuildUpgr(2, UPG_GERMANIC_RANGED)
    call SetBuildUpgr(1, UPG_GERMANIC_SHAMAN)
    call SetBuildUpgr(1, UPG_GERMANIC_DRUID)
    call SetBuildUpgr(1, UPG_GERMANIC_SEER)
    call SetBuildUpgr(1, UPG_GERMANIC_LUMBER)
    call SetBuildUpgr(1, UPG_GERMANIC_HORSE)

    call SetBuildUnitEx( 1,1,1, GERMANIC_TIER_3    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_STABLES    )
    call SetBuildUnitEx( 1,1,1, GERMANIC_RITUAL_SITE    )
    call SetBuildUpgr(3, UPG_GERMANIC_MELEE)
    call SetBuildUpgr(3, UPG_GERMANIC_ARMOR)
    call SetBuildUpgr(3, UPG_GERMANIC_RANGED)
    call SetBuildUpgr(2, UPG_GERMANIC_SHAMAN)
    call SetBuildUpgr(2, UPG_GERMANIC_DRUID)
    call SetBuildUpgr(2, UPG_GERMANIC_SEER)
    call SetBuildUpgr(2, UPG_GERMANIC_LUMBER)
    call SetBuildUpgr(3, UPG_GERMANIC_HORSE)
    call SetBuildUpgr(1, UPG_GERMANIC_VENOM)
    call SetBuildUpgr(1, UPG_GERMANIC_PILLAGE)
    call SetBuildUpgr(1, UPG_GERMANIC_ULTRAVISION)
    call SetBuildUpgr(1, UPG_GERMANIC_ENSNARE)

    loop
        call InitAssaultGroup()
        call CampaignAttackerEx(1, 1, 1, hero_id)
        call CampaignAttackerEx(3, 4, 4, GERMANIC_WARRIOR)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_ARCHER)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_RIDER)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_JAVELIN)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_DRUID)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_SHAMAN)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_SEER)
        call CampaignAttackerEx(1, 2, 3, GERMANIC_BERSKER)
        call Sleep(M1) // Waits 1 minute before attacking
        call LaunchAttack()
    endloop
endfunction
